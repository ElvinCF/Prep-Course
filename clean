[33mcommit 4ade3c4bcf1966f1fb146466ec322a20d67b8719[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: ElvinCF <cordovafloreselvin@gmail.com>
Date:   Mon May 30 23:56:34 2022 -0500

    primer cmmit de verdad

[1mdiff --git a/02-JS-I/homework/homework.js b/02-JS-I/homework/homework.js[m
[1mindex 3c92ac9..f1cf511 100644[m
[1m--- a/02-JS-I/homework/homework.js[m
[1m+++ b/02-JS-I/homework/homework.js[m
[36m@@ -1,22 +1,22 @@[m
 // En estas primeras 6 preguntas, reemplaza `null` por la respuesta[m
 [m
 // Crea una variable "string", puede contener lo que quieras:[m
[31m-const nuevaString = null;[m
[32m+[m[32mconst nuevaString = "cadena";[m
 [m
 // Crea una variable num√©rica, puede ser cualquier n√∫mero:[m
[31m-const nuevoNum = null;[m
[32m+[m[32mconst nuevoNum = 3;[m
 [m
 // Crea una variable booleana:[m
[31m-const nuevoBool = null;[m
[32m+[m[32mconst nuevoBool = true;[m
 [m
 // Resuelve el siguiente problema matem√°tico:[m
[31m-const nuevaResta = 10 - null === 5;[m
[32m+[m[32mconst nuevaResta = 10 - 5 === 5;[m
 [m
 // Resuelve el siguiente problema matem√°tico:[m
[31m-const nuevaMultiplicacion = 10 * null === 40 ;[m
[32m+[m[32mconst nuevaMultiplicacion = 10 * 4 === 40 ;[m
 [m
 // Resuelve el siguiente problema matem√°tico:[m
[31m-const nuevoModulo = 21 % 5 === null;[m
[32m+[m[32mconst nuevoModulo = 21 % 5 === 1;[m
 [m
 [m
 // En los pr√≥ximos 22 problemas, deber√°s completar la funci√≥n.[m
[36m@@ -28,39 +28,39 @@[m [mconst nuevoModulo = 21 % 5 === null;[m
 function devolverString(str) {[m
   // "Return" la string provista: str[m
   // Tu c√≥digo:[m
[31m-  [m
[32m+[m[32m  return str;[m
 }[m
 [m
 function suma(x, y) {[m
   // "x" e "y" son n√∫meros[m
   // Suma "x" e "y" juntos y devuelve el valor[m
   // Tu c√≥digo:[m
[31m-  [m
[32m+[m[32m   return x+y;[m
 }[m
 [m
 function resta(x, y) {[m
   // Resta "y" de "x" y devuelve el valor[m
   // Tu c√≥digo:[m
[31m-  [m
[32m+[m[32m  return x-y;[m
 }[m
 [m
 function multiplica(x, y) {[m
   // Multiplica "x" por "y" y devuelve el valor[m
   // Tu c√≥digo:[m
[31m-  [m
[32m+[m[32m   return x*y;[m
 }[m
 [m
 function divide(x, y) {[m
   // Divide "x" entre "y" y devuelve el valor[m
   // Tu c√≥digo:[m
[31m-  [m
[32m+[m[32m  return x/y;[m
 }[m
 [m
 function sonIguales(x, y) {[m
   // Devuelve "true" si "x" e "y" son iguales[m
   // De lo contrario, devuelve "false"[m
   // Tu c√≥digo:[m
[31m-  [m
[32m+[m[32m  return x == y;[m
 }[m
 [m
 function tienenMismaLongitud(str1, str2) {[m
